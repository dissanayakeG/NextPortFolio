name: Deploy Production

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.env.example'

jobs:
  deploy:
    name: Production Deployment
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Clean Remote Directory
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.SSHKEY }}
        script: |
          echo "Cleaning existing build files..."
          cd /var/www/port-folio
          rm -rf .next
          rm -rf node_modules

    - name: Deploy Files
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.SSHKEY }}
        source: "."
        target: "/var/www/port-folio"
        rm: true

    - name: Build and Start Application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.SSHKEY }}
        script: |
          echo "Starting deployment process..."
          cd /var/www/port-folio
          
          # Setup environment
          export PATH="$HOME/.local/share/pnpm:$PATH"
          export NODE_ENV=production
          
          echo "Installing dependencies..."
          pnpm install --frozen-lockfile
          
          echo "Building application..."
          pnpm build
          
          echo "Updating PM2 process..."
          if pm2 show port-folio > /dev/null 2>&1; then
            pm2 reload port-folio --update-env
          else
            pm2 start pnpm --name "port-folio" -- start
          fi
          
          # Cleanup and save PM2 configuration
          pm2 flush port-folio
          pm2 save
          
          echo "Deployment completed successfully!"